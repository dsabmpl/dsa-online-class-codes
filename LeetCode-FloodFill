class Solution {
    // TC O(m*n) SC O(m * n)
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int currentColor = image[sr][sc];
        if(currentColor == color){
            return image;
        }
        // color is different
        dfs(image, sr, sc, color, currentColor);
        return image;
    }
    void dfs(int[][] image, int sr, int sc, int newColor,int orgColor){
        // base case
        if(sr<0 || sr>=image.length || sc<0 || sc>=image[0].length || image[sr][sc]!=orgColor){
            return ; // BackTrack
        }
        image[sr][sc] = newColor; // Mark as visited
        // Explore all the directions
        dfs(image, sr+1, sc , newColor, orgColor); // Move Down
        dfs(image, sr-1, sc , newColor, orgColor); // Move Up
        dfs(image, sr, sc+1 , newColor, orgColor); // Move Right
        dfs(image, sr, sc-1 , newColor, orgColor); // Move Left


    }
}
