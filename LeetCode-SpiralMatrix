class Solution {
    // TC O(M*N) SC O(N)
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> result = new ArrayList<>();
        int m = matrix.length;
        int n = matrix[0].length;
        // left to right
        // top to bottom
        // right to left 
        // move to up 
        // Maintain the index
        int top = 0;
        int bottom = m-1;
        int left = 0;
        int right = n-1;
        while(top<=bottom && left<=right){
            // Step - 1 left to right
            for(int j = left; j<=right; j++){
                result.add(matrix[top][j]);
            }
            // Shrink the Row
            top++;
            // Step - 2 Top To Bottom
            for(int j = top; j<=bottom; j++){
                result.add(matrix[j][right]);
            }
            // Shrink the Right Column
            right--;
            // Step - 3 Right to Left
            if(top<=bottom){
            for(int j = right; j>=left; j--){
                result.add(matrix[bottom][j]);
            }
            // Shrink the Bottom
            bottom--;
            }
            // Step - 4 Move Up
            if(left<=right){
            for(int j = bottom; j>=top; j--){
                result.add(matrix[j][left]);
            }
            // Shrink the Left
            left++;
            }
           
        }
         return result;
    }
}
