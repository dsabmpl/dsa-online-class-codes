class Solution {
    // TC O(N^2) SC O(N)
    // public ArrayList<Integer> nextLargerElement(int[] arr) {
    //     // code here
    //     ArrayList<Integer> list =new ArrayList<>();
    //     int n = arr.length;
       
    //     for(int i = 0; i<n ; i++){
    //          boolean isFound = false;
    //         for(int j = i + 1; j<n ; j++){
    //             if(arr[j]> arr[i]){
    //                 isFound = true;
    //                 list.add(arr[j]);
    //                 break;
    //             }
    //         } // j loop ends
    //         if(!isFound){
    //             list.add(-1);
    //         }
    //     }
    //     return list;
        
    // }
    // TC O(N) SC O(N)
    public ArrayList<Integer> nextLargerElement(int[] arr) {
         ArrayList<Integer> list =new ArrayList<>();
         Stack<Integer> stack = new Stack<>();
         int n = arr.length - 1;
         for(int i = n;  i>=0; i--){
             while(!stack.isEmpty() && stack.peek() <= arr[i]) {
                 stack.pop();
             }
             list.add(stack.isEmpty()?-1:stack.peek());
             stack.push(arr[i]);
         }
         Collections.reverse(list);
         return list;
    }
}
